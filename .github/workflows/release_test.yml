name: 发布内容测试
on: workflow_dispatch  # 仅手动触发

jobs:
  process-version-info:
    runs-on: ubuntu-latest
    steps:
      - name: 下载所有版本信息 artifact
        uses: actions/download-artifact@v4
        with:
          path: version-info-all
          pattern: version_info_*  # 精确匹配原工作流中版本信息 artifact 的命名规则（version_info_{版本}_{设备}）

      - name: 强制创建版本信息目录（防止未下载到文件时出错）
        run: |
          mkdir -p version-info-all

      - name: 检查版本信息 artifact 下载结果（调试用）
        run: |
          echo "===== 版本信息文件列表====="
          find version-info-all -type f

      - name: 提取版本和目标信息
        id: extract_version_target
        run: |
          # 创建合并后的版本信息文件
          echo "所有版本和目标设备信息汇总" > version-info-all.txt
          echo "==========================================" >> version-info-all.txt
          
          VERSIONS=()
          TARGETS=()
          
          # 遍历版本信息文件（适配下载后的目录结构）
          for file in $(find version-info-all -type f -name "version_target_*.txt"); do
            if [ -f "$file" ]; then
              cat "$file" >> version-info-all.txt
              echo "==========================================" >> version-info-all.txt
              while IFS= read -r line; do
                IFS=':' read -ra parts <<< "$line"
                VERSIONS+=("${parts[0]}")
                TARGETS+=("${parts[1]}")
              done < "$file"
            fi
          done
          
          # 去重处理
          UNIQUE_VERSIONS=($(printf "%s\n" "${VERSIONS[@]}" | sort -u))
          UNIQUE_TARGETS=($(printf "%s\n" "${TARGETS[@]}" | sort -u))
          echo "versions=${UNIQUE_VERSIONS[*]}" >> $GITHUB_OUTPUT
          echo "targets=${UNIQUE_TARGETS[*]}" >> $GITHUB_OUTPUT

      - name: 生成版本信息汇总文件
        run: |
          mkdir -p final-release
          # 将合并的版本信息文件复制到输出目录
          cp version-info-all.txt final-release/version-summary.txt
          
          # 生成版本信息说明
          echo "# OpenWRT 版本与设备信息汇总" > release.txt
          echo "生成时间: $(date +'%Y-%m-%d %H:%M:%S')" >> release.txt
          echo "包含以下版本和设备：" >> release.txt
          echo "- 版本: ${{ steps.extract_version_target.outputs.versions }}" >> release.txt
          echo "- 设备: ${{ steps.extract_version_target.outputs.targets }}" >> release.txt
          echo -e "\n详细信息请查看 version-summary.txt 文件" >> release.txt

      - name: 生成发布标签
        id: tag
        run: |
          echo "release_tag=openwrt-version-info_$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: 发布版本信息
        uses: softprops/action-gh-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: final-release/version-summary.txt

      - name: 保留最新3个版本信息Release
        uses: dev-drprasad/delete-older-releases@v0.3.3
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
